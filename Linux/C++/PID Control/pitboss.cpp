#include <stdio.h>
#include <stddef.h>
#include <stdlib.h>
#include <cstring>
#include <unistd.h>
#include <ctype.h>
#include "pitboss.h"

int main(int argc, char ** args){
	int c;
	while((c = getopt(argc, args, "hp:")) != -1){
		switch(c){
			case 'h':
				printf("Displays results from a results binary file generated by 'dealer'\n"
					"Usage: ./pitboss <options> <arguments>\n\n"
					"Options:\n"
					"-h	Help information\n"
					"-p 	Specifies the percentage of the stored result to display, expects integer in range [0-100]\n");
				return 0;
			case 'p':
				if(isInteger(optarg))
					percentage = atoi(optarg);
				else{
					printf("Invalid Argument: expected integer in range [0-100], found: %s",optarg);
					return 1;
				}		
				break;
			case '?':
				printf("Unknown Argument: %s\n, try -h for help\n",c);
				return 1;
			
		}
	}
	if(optind < argc){
		if(!(input = fopen(args[optind],"r"))){
			printf("Invald Argument, unable to read file: %s\n", args[optind]);
			return 1;
		}
		filename = args[optind];
	}
	else{
		printf("Invalid Syntax: expected input file as argument\n");			
		return 1;
	}
	printf("Reading results from %s ...\n",filename);
	readData(percentage, input);
	return 0;	
}

void readData(int percentage, FILE * in){
	record rec;
	printf("Checking results for -p = %d\n",percentage);
	while(fread(&rec, sizeof(struct record), 1, in)){
		if(rec.percentage == percentage)
			break;
	}
	if(rec.percentage != percentage){
		printf("Unable to find record for percentage: %d%%\n", percentage);
		exit(1);
	}
	printf("Found %d trials\n\n"
		"Success - %d%%\n"
		"Failure - %d%%\n",rec.trials, rec.successes, rec.failures);
	
}

bool isInteger(char * c){
	for(int i = 0; i < strlen(c); i++)
		if(!isdigit(c[i]))
			return false;
	return true;
}
